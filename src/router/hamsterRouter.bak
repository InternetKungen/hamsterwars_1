// hamsterRouter.js

import express from 'express';
import { fetchCollection } from '../mongodb/mongoDbClient.js';

const router = express.Router();

router.get('/', async (req, res) => {
  try {
    const hamsters = await fetchCollection('hamsters').find().toArray();
    res.json(hamsters);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
});

router.post('/', async (req, res) => {
  const hamster = {
    name: req.body.name,
    image: req.body.image,
    votes: { won: 0, lost: 0 }
  };

  try {
    const collection = fetchCollection('hamsters');
    await collection.insertOne(hamster);
    res.status(201).json(hamster);
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

router.get('/:id', async (req, res) => {
  try {
    const collection = fetchCollection('hamsters');
    const hamster = await collection.findOne({ _id: req.params.id });
    if (!hamster) {
      return res.status(404).json({ message: 'Hamster not found' });
    }
    res.json(hamster);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
});

router.delete('/:id', async (req, res) => {
  try {
    const collection = fetchCollection('hamsters');
    const result = await collection.deleteOne({ _id: req.params.id });
    if (result.deletedCount === 0) {
      return res.status(404).json({ message: 'Hamster not found' });
    }
    res.json({ message: 'Hamster deleted' });
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
});

// Implementera resten av endpoints h√§r...

export default router;
